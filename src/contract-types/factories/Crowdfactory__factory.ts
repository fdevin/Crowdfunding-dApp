/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Crowdfactory, CrowdfactoryInterface } from "../Crowdfactory";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "factoryOwnerAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "projTitle",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "goalAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ownerWalletAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "projAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeWalletAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64[8]",
        name: "stockPerTier",
        type: "uint64[8]",
      },
      {
        indexed: false,
        internalType: "uint128[8]",
        name: "costPerTier",
        type: "uint128[8]",
      },
    ],
    name: "ProjectCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "projectTitle",
        type: "string",
      },
      {
        internalType: "string",
        name: "projDescript",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "projGoalAmount",
        type: "uint256",
      },
      {
        internalType: "uint64[8]",
        name: "stockPerTier_",
        type: "uint64[8]",
      },
      {
        internalType: "uint128[8]",
        name: "costPerTier_",
        type: "uint128[8]",
      },
      {
        internalType: "address",
        name: "projOwnerAddr",
        type: "address",
      },
    ],
    name: "createProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentageAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeWalletAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "publishedProjs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPublishedProjs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class Crowdfactory__factory {
  static readonly abi = _abi;
  static createInterface(): CrowdfactoryInterface {
    return new utils.Interface(_abi) as CrowdfactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Crowdfactory {
    return new Contract(address, _abi, signerOrProvider) as Crowdfactory;
  }
}
